buildscript {
    repositories {
        maven {
            name 'Gradle Shadow'
            url 'http://dl.bintray.com/content/johnrengelman/gradle-plugins'
        }
    }
    dependencies {
        classpath 'org.gradle.plugins:shadow:0.7.4'
    }
}

apply plugin: 'shadow'


shadow {
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'

    transformer (org.gradle.api.plugins.shadow.transformers.ServiceFileTransformer.class) {

    }
}


apply plugin: 'java'


repositories {
    mavenCentral()
}

dependencies {
    compile 'com.yammer.dropwizard:dropwizard-core:0.6.2'
    compile 'com.yammer.dropwizard:dropwizard-jdbi:0.6.2'
    compile files('local-lib/ojdbc6_g.jar')

    testCompile 'org.kohsuke.stapler:json-lib:2.1-rev6'
    testCompile 'junit:junit:4.+'
    testCompile 'com.yammer.dropwizard:dropwizard-client:0.6.2'
    testCompile 'com.yammer.dropwizard:dropwizard-testing:0.6.2'
    testCompile 'org.easytesting:fest-assert:1.4'
}

apply plugin: 'application'

mainClassName = 'kanbannow.CardService'

run {
    args 'server', '../properties/card-service.yml'
}

archivesBaseName = 'kanban-now-card-service'

jar {
     from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
         exclude "META-INF/*.SF"
         exclude "META-INF/*.DSA"
         exclude "META-INF/*.RSA"
     }
    manifest { attributes 'Main-Class': 'kanbannow.CardService' }
 }


ant.importBuild 'build.xml'


apply plugin: 'checkstyle'

task checkstyleReport << {
    if (file("$buildDir/reports/checkstyle/${checkType}.xml").exists()) {
        ant.xslt(in: "$buildDir/reports/checkstyle/${checkType}.xml",
                style:"config/checkstyle/checkstyle.xsl",
                out:"$buildDir/reports/checkstyle/checkstyle_${checkType}.html"
        )
    }
}


gradle.taskGraph.afterTask {Task task, TaskState state ->
    if(state.failure) {
        if (task.name in ['checkstyleMain', 'checkstyleTest']) {
            checkstyleReport {
                def matcher = task.name =~ /^checkstyle(.*)$/
                if (matcher.matches()) {
                    checkType = matcher.group(1).toLowerCase()
                }
            }
            checkstyleReport.execute()
        }
    }
}

checkstyle {
    ignoreFailures = true
}


